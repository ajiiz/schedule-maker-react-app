{"version":3,"sources":["components/DaysTasks.js","components/Day.js","Data.js","components/Buttons.js","components/Days.js","components/App.js","index.js"],"names":["DaysTasks","props","className","onClick","handleDeleteTask","task","id","type","checked","completed","onChange","handleChange","style","fontStyle","color","textDecoration","text","Day","state","data","tasks","newTask","bind","handleSubmit","handleChangeNewTask","this","setState","prevState","map","updateTasks","e","key","updatedTasks","taskObj","length","push","target","name","value","splice","dayName","onKeyPress","placeholder","Component","Data","Buttons","saveStorage","clearStorage","Days","json","localStorage","getItem","dataStorage","JSON","parse","undefined","updatedTask","stringify","setItem","removeItem","window","location","reload","App","r","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b2aba30f.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/DaysTasks.css'\r\n\r\nexport default function DaysTasks(props){\r\n    const completedTaskStyles = {\r\n        fontStyle : \"italic\",\r\n        color : \"#cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n    return(\r\n        <div className = \"day-content\">\r\n            <div className = \"trash-icon\" onClick = {() => props.handleDeleteTask(props.task.id)}>\r\n                <i className = \"fa fa-trash-o\"></i>\r\n            </div>\r\n            <input\r\n                type = \"checkbox\"\r\n                checked = {props.task.completed}\r\n                onChange = {() => props.handleChange(props.task.id)}\r\n            />\r\n            <p style = {props.task.completed ? completedTaskStyles:null}>{props.task.text}</p>\r\n        </div>\r\n    )\r\n}","import React,{Component} from \"react\"\r\nimport \"../styles/Day.css\"\r\nimport DaysTasks from \"./DaysTasks\"\r\n\r\nclass Day extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            task : props.data.tasks,\r\n            newTask : \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChangeNewTask = this.handleChangeNewTask.bind(this)\r\n        this.handleDeleteTask = this.handleDeleteTask.bind(this)\r\n    }\r\n    handleChange(id){\r\n        this.setState(prevState => {\r\n            const updatedTasks = prevState.task.map(task => {\r\n                if(task.id === id) task.completed = !task.completed\r\n                return task\r\n            })\r\n            return {\r\n                task : updatedTasks\r\n            }\r\n        },() => this.props.updateTasks(this.state.task, this.props.data.id))\r\n    }\r\n    handleSubmit(e){\r\n        if(e.key === \"Enter\") {\r\n            if(this.state.newTask !== \"\") {\r\n                this.setState(prevState => {\r\n                    const updatedTasks = prevState.task.map(task => {\r\n                        return task\r\n                    })\r\n                    let taskObj = {\"text\" : this.state.newTask, \"completed\" : false, \"id\" : updatedTasks.length+1}\r\n                    updatedTasks.push(taskObj)\r\n                    return {\r\n                        task : updatedTasks,\r\n                        newTask : \"\"\r\n                    }\r\n                },() => {this.props.updateTasks(this.state.task, this.props.data.id)}) //callback function\r\n            }\r\n        }\r\n    }\r\n    handleChangeNewTask({ target }){\r\n        this.setState({\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n    handleDeleteTask(id) {\r\n        this.setState(prevState => {\r\n            const updatedTasks = prevState.task.map(task => {\r\n                if(task.id >= id) task.id-=1\r\n                    return task\r\n            })\r\n            updatedTasks.splice(id-1,1)\r\n            return {\r\n                task : updatedTasks\r\n            }\r\n        },() => {this.props.updateTasks(this.state.task, this.props.data.id)})\r\n    }\r\n    render(){\r\n        const tasks = this.state.task.map(task =>\r\n            <DaysTasks\r\n            task = {task}\r\n            key = {task.id}\r\n            handleChange = {this.handleChange}\r\n            handleDeleteTask = {this.handleDeleteTask}\r\n            />)\r\n        return(\r\n                <div className = \"days\">\r\n                    <div className = \"day-name\">\r\n                        <span>{this.props.data.dayName}</span>\r\n                    </div>\r\n                    {tasks}\r\n                    <input className = \"text-area\"\r\n                        type = \"text\"\r\n                        onChange = {this.handleChangeNewTask}\r\n                        onKeyPress = {this.handleSubmit}\r\n                        value = {this.state.newTask}\r\n                        name = \"newTask\"\r\n                        placeholder = \"enter new task\"\r\n                    />\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default Day","const Data = [\r\n    {\r\n        id : 0,\r\n        dayName : \"Monday\",\r\n        tasks : [\r\n            {\r\n                text : \"Start making plans!\",\r\n                completed : true,\r\n                id : 1,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id : 1,\r\n        dayName : \"Tuesday\",\r\n        tasks : [\r\n            {\r\n                text : \"Be yourself!\",\r\n                completed : false,\r\n                id : 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id :2,\r\n        dayName : \"Wednesday\",\r\n        tasks : [\r\n            {\r\n                text : \"Coffe is love\",\r\n                completed : true,\r\n                id : 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:3,\r\n        dayName : \"Thursday\",\r\n        tasks : [\r\n            {\r\n                text : \"Enjoy the day\",\r\n                completed : false,\r\n                id : 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:4,\r\n        dayName : \"Friday\",\r\n        tasks : [\r\n            {\r\n                text : \"Programming time\",\r\n                completed : false,\r\n                id : 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:5,\r\n        dayName : \"Saturday\",\r\n        tasks : [\r\n            {\r\n                text : \"Listen to music\",\r\n                completed : false,\r\n                id : 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:6,\r\n        dayName : \"Sunday\",\r\n        tasks : [\r\n            {\r\n                text : \"The end\",\r\n                completed : true,\r\n                id : 1\r\n            },\r\n            {\r\n                text: \"is a new beginning\",\r\n                completed: false,\r\n                id : 2\r\n            }\r\n        ]\r\n    }\r\n]\r\nexport default Data","import React from 'react'\r\nimport '../styles/Buttons.css'\r\n\r\nfunction Buttons(props) {\r\n    return (\r\n        <div className = \"buttons\">\r\n            <button className = \"btn\" onClick = {props.saveStorage}>\r\n                <div className = \"eff\"></div>\r\n            <span>save</span>\r\n            </button>\r\n            <button className = \"btn\" onClick = {props.clearStorage}>\r\n                <div className = \"eff\"></div>\r\n            <span>clear</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Buttons","import React,{Component} from \"react\"\r\nimport \"../styles/Days.css\"\r\nimport Day from \"./Day\"\r\nimport Data from \"../Data\"\r\nimport Buttons from \"./Buttons\"\r\n\r\nclass Days extends Component {\r\n    constructor(){\r\n        super()\r\n        const json = localStorage.getItem('myTasks')\r\n        let dataStorage = JSON.parse(json)\r\n        if(dataStorage === null || dataStorage === undefined) dataStorage = Data\r\n        this.state = {\r\n            data : dataStorage\r\n        }\r\n        this.saveStorage = this.saveStorage.bind(this)\r\n        this.clearStorage = this.clearStorage.bind(this)\r\n        this.updateTasks = this.updateTasks.bind(this)\r\n    }\r\n    updateTasks(updatedTask, id) {\r\n        this.setState(prevState => {\r\n            const updatedTasks = prevState.data.map(data => {\r\n                if(data.id === id) {\r\n                    data.tasks = updatedTask\r\n                }\r\n                return data\r\n            })\r\n            return {\r\n                task : updatedTasks\r\n            }\r\n        })\r\n    }\r\n    saveStorage(){\r\n        const json = JSON.stringify(this.state.data)\r\n        localStorage.setItem('myTasks', json)\r\n    }\r\n    clearStorage() {\r\n        localStorage.removeItem('myTasks')\r\n        window.location.reload(false)\r\n    }\r\n    render(){\r\n        const Data = this.state.data.map(data => <Day key = {data.id} data = {data} updateTasks = {this.updateTasks}/>)\r\n        return(\r\n            <div className = \"main-days\">\r\n                <Buttons saveStorage = {this.saveStorage} clearStorage = {this.clearStorage}/>\r\n                {Data}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Days","import React,{Component} from \"react\"\r\nimport '../styles/App.css'\r\nimport Days from './Days'\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className = \"wrapper\">\r\n                    <div className = \"typing\">Be Productive!</div>\r\n                </div>\r\n                <Days />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/App\"\r\n\r\nconst r = document.getElementById(\"root\")\r\nReactDOM.render(<App />, r)"],"sourceRoot":""}